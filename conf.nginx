upstream apicenter_server {
  server unix:/opt/mytest/run/gunicorn.sock fail_timeout=0;
}

server {
    listen   9000;
    server_name _;

    client_max_body_size 4G;

    # 2017-12-19 use below format to check performance issue..
#    log_format mykpi '[$time_local][$request_time $upstream_response_time] "$request" $status "$http_user_agent"';
    #access_log /opt/logs/api_nginx-access.log mykpi;

     access_log /opt/log/api_nginx-access.log;
     error_log /opt/log/api_nginx-error.log;

    location /static/ {
        alias   /opt/mytest/static/;
    }

    location /media/ {
        alias   /opt/mytest/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://apicenter_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /opt/backend/ai/api/static/;
    }
}

